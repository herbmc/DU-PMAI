name: Release
on:
  push:
    branches: main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Lua
        run:  sudo apt-get install lua5.3
        
      - name: Checkout
        uses: actions/checkout@v2
        with:
            path: main

      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
            repository: Dimencia/DU-Orbital-Hud
            ref: v4.837
            path: DU-Orbital-Hud

      - name: Version Number
        run:  echo "VERSION_NUMBER=$( date -u +%Y.%m.%d.%H%M )" >> $GITHUB_ENV
      
      - name: Wrap config
        run:  |
          lua5.3 -v
          lua5.3 DU-Orbital-Hud/scripts/wrap.lua main/container_monitor.lua --handle-errors-min t1-t3-monitor.json --slots displayT1a:type=screen core:type=core displayT1b:type=screen displayT2a:type=screen displayT2b:type=screen displayT3a:type=screen displayT3b:type=screen
          lua5.3 DU-Orbital-Hud/scripts/wrap.lua main/container_monitor.lua --handle-errors-min t4-t5-etc-monitor.json --slots displayT4a:type=screen core:type=core displayT4b:type=screen displayT5a:type=screen displayT5b:type=screen displayFuels:type=screen
          lua5.3 DU-Orbital-Hud/scripts/wrap.lua --handle-errors-min main/damage_report.lua damage-report.json --slots core:type=core screen:type=screen
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION_NUMBER }}
          release_name: Release v${{ env.VERSION_NUMBER }}

      - name: Upload Autoconf as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: main/pmai_flying_construct.conf
          asset_name: pmai_flying_construct.conf
          asset_content_type: application/x-yaml

      - name: Upload T1-T3 PB as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: t1-t3-monitor.json
          asset_name: t1-t3-monitor.json
          asset_content_type: application/json

      - name: Upload T4-T5-Etc PB as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: t4-t5-etc-monitor.json
          asset_name: t4-t5-etc-monitor.json
          asset_content_type: application/json

      - name: Upload damage report PB as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: damage-report.json
          asset_name: damage-report.json
          asset_content_type: application/json
